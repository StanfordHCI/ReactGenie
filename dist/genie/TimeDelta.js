"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TimeDelta = void 0;
var _reactgenieDsl = require("reactgenie-dsl");
require("reflect-metadata");
var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _class, _class2, _descriptor, _descriptor2, _descriptor3, _class3;
function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'transform-class-properties is enabled and runs after the decorators transform.'); }
let TimeDelta = (_dec = (0, _reactgenieDsl.GenieClass)("Delta time"), _dec2 = Reflect.metadata("design:type", Function), _dec3 = Reflect.metadata("design:paramtypes", [Object]), _dec4 = Reflect.metadata("design:destructuringparamtypes", [{
  hour: Number,
  minute: Number,
  second: Number
}]), _dec5 = (0, _reactgenieDsl.GenieProperty)(), _dec6 = Reflect.metadata("design:type", Number), _dec7 = (0, _reactgenieDsl.GenieProperty)(), _dec8 = Reflect.metadata("design:type", Number), _dec9 = (0, _reactgenieDsl.GenieProperty)(), _dec10 = Reflect.metadata("design:type", Number), _dec11 = (0, _reactgenieDsl.GenieFunction)("Create a new TimeDelta object"), _dec12 = Reflect.metadata("design:type", Function), _dec13 = Reflect.metadata("design:paramtypes", [Object]), _dec14 = Reflect.metadata("design:returntype", "TimeDelta"), _dec15 = Reflect.metadata("design:is_static", true), _dec16 = Reflect.metadata("design:destructuringparamtypes", [{
  hour: Number,
  minute: Number,
  second: Number
}]), _dec17 = (0, _reactgenieDsl.GenieFunction)("Add a offset to the time"), _dec18 = Reflect.metadata("design:type", Function), _dec19 = Reflect.metadata("design:paramtypes", [Object]), _dec20 = Reflect.metadata("design:returntype", "void"), _dec21 = Reflect.metadata("design:destructuringparamtypes", [{
  hour: Number,
  minute: Number,
  second: Number
}]), _dec22 = (0, _reactgenieDsl.GenieFunction)("Set the value to the time"), _dec23 = Reflect.metadata("design:type", Function), _dec24 = Reflect.metadata("design:paramtypes", [Object]), _dec25 = Reflect.metadata("design:returntype", "void"), _dec26 = Reflect.metadata("design:destructuringparamtypes", [{
  hour: Number,
  minute: Number,
  second: Number
}]), _dec27 = (0, _reactgenieDsl.GenieFunction)("Get the second of the TimeDelta object"), _dec28 = Reflect.metadata("design:type", Function), _dec29 = Reflect.metadata("design:paramtypes", []), _dec30 = Reflect.metadata("design:returntype", Number), _dec(_class = _dec2(_class = _dec3(_class = _dec4(_class = (_class2 = (_class3 = class TimeDelta extends _reactgenieDsl.HelperClass {
  constructor({
    hour = 0,
    minute = 0,
    second = 0
  }) {
    super({});
    _initializerDefineProperty(this, "hour", _descriptor, this);
    _initializerDefineProperty(this, "minute", _descriptor2, this);
    _initializerDefineProperty(this, "second", _descriptor3, this);
    this.hour = hour;
    this.minute = minute;
    this.second = second;
  }
  static setup() {}

  // custom comparator for sorting
  static compare(a, b) {
    console.log(a.getLeftSecond(), b.getLeftSecond());
    return a.getLeftSecond() - b.getLeftSecond();
  }
  static CreateTimeDelta({
    hour = 0,
    minute = 0,
    second = 0
  }) {
    return TimeDelta.CreateObject({
      hour: hour,
      minute: minute,
      second: second
    });
  }
  addOffset({
    hour = 0,
    minute = 0,
    second = 0
  }) {
    const offsettime = this.getLeftSecond() + hour * 3600 + minute * 60 + second;
    if (offsettime < 0) {
      this.hour = 0;
      this.minute = 0;
      this.second = 0;
      return;
    }
    this.hour = Math.floor(offsettime / 3600);
    this.minute = Math.floor(offsettime % 3600 / 60);
    this.second = offsettime % 60;
  }
  setTime({
    hour = 0,
    minute = 0,
    second = 0
  }) {
    this.hour = hour;
    this.minute = minute;
    this.second = second;
  }
  getLeftSecond() {
    return this.second + this.minute * 60 + this.hour * 3600;
  }
  toString() {
    return `${this.hour}:${this.minute}:${this.second}`;
  }
}, _class3.Examples = [{
  user_utterance: "20 miniutes later",
  example_parsed: "TimeDelta.CreateObject({minute: 20})"
}, {
  user_utterance: "1hour later",
  example_parsed: "TimeDelta.CreateObject({hour: 1})"
}, {
  user_utterance: "1hour 20miniutes later",
  example_parsed: "TimeDelta.CreateObject({hour: 1, minute: 20})"
}], _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "hour", [_dec5, _dec6], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "minute", [_dec7, _dec8], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "second", [_dec9, _dec10], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2, "CreateTimeDelta", [_dec11, _dec12, _dec13, _dec14, _dec15, _dec16], Object.getOwnPropertyDescriptor(_class2, "CreateTimeDelta"), _class2), _applyDecoratedDescriptor(_class2.prototype, "addOffset", [_dec17, _dec18, _dec19, _dec20, _dec21], Object.getOwnPropertyDescriptor(_class2.prototype, "addOffset"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "setTime", [_dec22, _dec23, _dec24, _dec25, _dec26], Object.getOwnPropertyDescriptor(_class2.prototype, "setTime"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "getLeftSecond", [_dec27, _dec28, _dec29, _dec30], Object.getOwnPropertyDescriptor(_class2.prototype, "getLeftSecond"), _class2.prototype)), _class2)) || _class) || _class) || _class) || _class);
exports.TimeDelta = TimeDelta;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,